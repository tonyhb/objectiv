<?php defined('SYSPATH') or die('No direct script access');

/**
 * This class defines the methods an API model must provide.
 *
 * [!!] Note: We could use PHP 5.4's Traits to add multiple inheritance to API 
 * models, allowing them to extend Model_Core and use Model_API_V1 methods at 
 * the same time.
 * Using Traits would allow us to implement the TRACE http method once for all 
 * objects.
 *
 *
 * @cateogry API
 * @subcategory Version 1
 */
interface Model_API_V1
{

	/**
	 * Loads a collection or resource from the DB
	 *
	 * @param  string  ID of the model to load
	 * @return mixed   Model_API_V1_$Model or Mundo_Collection
	 * @throws App_API_Exception  On any failure with the appropriate HTTP code 
	 * as the exception code.
	 */
	public function API_Get();

	/**
	 * Updates a resource, overwriting publicly writable fields with the 
	 * provided $data.
	 *
	 * This resource is used to update resources instead of POST because PUT is 
	 * idempotent. Because IDs are automatically generated by the server (us) we 
	 * cannot use PUT to create in an idempotent manner.
	 *
	 * @param array     Array of data to save in the model
	 * @return boolean  True on success
	 * @throws App_API_Exception  on any failure
	 */
	public function API_Put($data);

	/**
	 * Creates a resource using the provided data.
	 *
	 * @param array     Array of data to save in the new model
	 * @return boolean  True on success
	 * @throws App_API_Exception  on any failure
	 */
	public function API_Post($field);

	/**
	 * Updates specific fields in a resource in a PARTIAL manner. This does not 
	 * do a full update, which could be better for mobile devices.
	 *
	 * @param array     Array of $fields => $data to overwrite
	 * @return boolean  True on success
	 * @throws App_API_Exception  on any failure
	 */
	public function API_Patch($field);

	/**
	 * Deletes a resource from the database.
	 *
	 * This is a permanent action.
	 *
	 * @return boolean True on success
	 * @throws App_API_Exception
	 */
	public function API_Delete();

	/**
	 * Lists which of the above methods are available for the specific collection
	 * or resource
	 *
	 */
	public function API_Options();

}
